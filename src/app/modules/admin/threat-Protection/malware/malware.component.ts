import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';
import { FuseAlertType } from '@fuse/components/alert';
import { NicService } from 'app/api/nic-info.service';
import { of } from 'rxjs';
import { catchError } from 'rxjs/operators';
import { WarningDialogComponent } from '../../common/dialogs/warning-dialog/warning-dialog.component';
import { MatDialog } from '@angular/material/dialog';
import { AddMalwareIpComponent } from './add-malware-ip/add-malware-ip.component';

@Component({
    selector: 'app-malware',
    templateUrl: './malware.component.html',
    styleUrls: ['./malware.component.scss'],
    encapsulation: ViewEncapsulation.None
})
export class MalwareComponent implements OnInit {

    
    alert: { type: FuseAlertType; message: string } = {type   : 'success',message: ''};
    showAlert: boolean = false;
    loading: boolean = false;

    headerMapping: { [key: string]: string } = {
        ip: 'IP',
        malware_status: 'Status',
        malware_action: 'Action'
    };

    displayedColumns: string[] = [
        'ip','malware_status','malware_action'
    ];

    blockedIps: any[] = [];

    constructor( private apiService: NicService ,private cdr: ChangeDetectorRef,public dialog: MatDialog) 
    { 
        
        
        this.getMaliciousFileList();
        
    }

    

    showTimedAlert(type: FuseAlertType, message: string) {
        this.alert.type = type;
        this.alert.message = message;
        this.showAlert = true;
    
        // Automatically hide the alert after 5 seconds
        setTimeout(() => {
          this.showAlert = false;
        }, 2000);
    }

    getMaliciousFileList(): void {
        this.loading = true;
        // const response1:any =  {"api_status": "success","message": "Whitelist IPs retrieved.",
        //     "data": [
        //                 "1.2.3.5",
        //                 "3.3.3.3",
        //                 "4.4.4.4",
        //                 "5.5.5.5"
        //             ]}; 
        // response1.data = response1.data.map(ip => ({ ip }));
        // this.blockedIps = response1.data;
        this.apiService.getMalwareListData()
            .pipe(
                catchError(error => {
                    this.showTimedAlert("error", "Error Fetching Data")
                    this.loading = false;
                    return of({ api_status: 'error', message: 'Failed to fetch data' }); 
                })
            )
            .subscribe(response => 
            {
                this.showAlert = false;
                if (response.api_status === 'success') 
                {
                    this.loading = false;
                    
                    const response1:any =  response.data;
                    response1.data = response1.data.map(ip => ({ ip }));
                    this.blockedIps = response1.data;

                    // this.blockedIps = response.data;
                   
                    //this.LastUpdatedDefCount = this.storedDefCount;
                    this.showTimedAlert("success", "Updated Successfully")
                } 
                else 
                {
                    this.showTimedAlert("error", response.message || "Unknown error")
                    this.loading = false;
                }
                
            });
        // this.cdr.detectChanges(); 
        this.loading = false;
    }

    onEditRow(row: any): void {
        if (row.sep === "malware-ip-delete") {
        
            const dialogRef = this.dialog.open(WarningDialogComponent, {
                width: '700px',
                disableClose: true,
                data: { title: 'Delete Malicious', row: row , message:"Are you sure you want to delete Malicious IP "+row.ip+"?", action:"delete-malicious-ip"}
            });
            dialogRef.afterClosed().subscribe(result => {
                // console.log('Dialog closed', result);
                 this.refreshTable()
                 this.showTimedAlert("success","Updated successfully")
            });
        }
    }

    refreshTable()
    {
        this.loading = true;
        this.getMaliciousFileList();
    }
    
    AddMaliciousIP()
    {
        const dialogRef = this.dialog.open(AddMalwareIpComponent, {
                    width: '500px',
                    disableClose: false,
                    data: { title: 'Add Malicious IP', row: "" , sep:'add'}
                });
                dialogRef.afterClosed().subscribe(result => {
                    // console.log('Dialog closed', result);
                     this.refreshTable()
                     this.showTimedAlert("success","Updated successfully")
                });
    }
    

    ngOnInit(): void {
    }

    

}
